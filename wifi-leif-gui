#!/bin/bash



# while-menu-dialog: a menu driven system information program

DIALOG_CANCEL=1
DIALOG_ESC=255
HEIGHT=0
WIDTH=0

display_result() {
  dialog --title "$1" \
    --no-collapse \
    --msgbox "$result" 0 0
}

while true; do
  exec 3>&1
  selection=$(dialog \
    --backtitle "WiFi-leif" \
    --title "WiFi-leif" \
    --clear \
    --cancel-label "Exit" \
    --menu "Please select:" $HEIGHT $WIDTH 15 \
    "1" "List		|	(List avilible WiFi accses points" \
    "2" "Rescan		|	(Rescan WiFi accses points)" \
    "3" "On		|	(Turn WiFi ON)" \
    "4" "Off		|	(Turn WiFi OFF)" \
    "5" "Status		|	(Show status of the wifi)" \
    "6" "Connect		|	(Connect to a WiFi accses point)" \
    "7" "Disconnect	|	(Disconnect from a Wifi accses point)" \
    "8" "Ip-local		|	(Shows local IP)" \
    "9" "Ip-public	|	(Shows public IP)!may take a while!" \
    "10" "Ping		|	(Ping a ip or a host)" \
    "11" "Exit		|	(Exit wifi-leif)" \
    2>&1 1>&3)
  exit_status=$?
  exec 3>&-
  case $exit_status in
    $DIALOG_CANCEL)
      clear
      echo "Program terminated."
      exit
      ;;
    $DIALOG_ESC)
      clear
      echo "Program aborted." >&2
      exit 1
      ;;
  esac
  case $selection in
    0 )
      clear
      echo "Program terminated."
      ;;

    1 )
      result=$(wifi-leif-logo-gui ; nmcli d wifi list)
      display_result "Wifi avilable:"
      ;;

    2 )
      result=$(
	wifi-leif-logo-gui && 
	echo 'Scanning for avilable WiFi' && 
	nmcli d wifi rescan && 
	sleep 1 && 
	echo "" && 
	echo "" && 
	echo 'Scanning is completted' )
      display_result "Scanning for WiFi"
      ;;

    3 )
        result=$(wifi-leif-logo-gui && 
	echo 'Turning on WiFi' && 
	echo "" && 
	echo 'WiFi is now:' && 
	nmcli r wifi on && 
	nmcli r wifi)
        display_result "Turning WiFi ON"
      ;;
    4)
	result=$(
	wifi-leif-logo-gui && 
	echo 'Turning off WiFi' && 
	echo "" && 
	echo 'WiFi is now:' && 
	nmcli r wifi off && 
	nmcli r wifi)
	display_result "Turning WiFi OFF"
	;;

     5)
	result=$(wifi-leif-logo-gui &&  nmcli d status) 
	WiFistatus=`nmcli d status`
	retval=$?
	display_result "Status of WiFi"
	dialog --inputbox \
	"$WiFistatus
   
	Select the correct Wifi Device:" 12 60 2> /tmp/WiFi.tmp.01
	retval=$?
	WiFi=`cat /tmp/WiFi.tmp.01`
	wifi-leif-logo-gui > /tmp/wifistatus.tmp.01
	echo "" >> /tmp/wifistatus.tmp.01
	ip link show $WiFi >> /tmp/wifistatus.tmp.01
	echo "" >> /tmp/wifistatus.tmp.01
	iw dev $WiFi station dump >> /tmp/wifistatus.tmp.01
	echo "" >> /tmp/wifistatus.tmp.01
	wifi >> /tmp/wifistatus.tmp.01 &&
	dialog --textbox /tmp/wifistatus.tmp.01 40 150
	rm -f /tmp/wifistatus.tmp.01
	rm -f /tmp/WiFi.tmp.01
     ;;
     6)
	result=$(wifi-leif-logo-gui && nmcli d status && echo "" && echo "Warning please dissconect if connected to WiFi" )
	display_result "Warning message"
	WiFistatus=`nmcli d status`

	dialog --inputbox \
	"$WiFistatus
   
	Select the correct Wifi Device:" 15 70 2> /tmp/WiFi.tmp.01 &&
	WiFi=`cat /tmp/WiFi.tmp.01`

	list=`nmcli d wifi list`
	dialog --inputbox \
	"$list
 
	Please write in accses name(WiFi-SSID), to the wifi you want to connect to" 20 80 2> /tmp/WiFiSSID.tmp.01
	WiFiSSID=`cat /tmp/WiFiSSID.tmp.01` &&

	dialog --inputbox \
	"Please Write in password for the wifi" 8 40 2> /tmp/WiFipassword.tmp.01
	WiFipassword=`cat /tmp/WiFipassword.tmp.01`

	result=$(wifi-leif-logo-gui && nmcli d wifi connect $WiFiSSID password $WiFipassword iface $WiFi)
	display_result "Connection:"

	rm -f /tmp/WiFipassword.tmp.01
	rm -f /tmp/WiFi.tmp.01
	rm -f /tmp/WiFiSSID.tmp.01
     ;;

     7)
	result=$(wifi-leif-logo-gui && nmcli d status )
	display_result "Dissabling WiFi"
	WiFistatus=`nmcli d status`

	dialog --inputbox \
	"$WiFistatus
   
	Select the correct Wifi Device:" 15 70 2> /tmp/WiFi.tmp.01 &&
	WiFi=`cat /tmp/WiFi.tmp.01`

	result=$(wifi-leif-logo-gui echo "Disconnecting the wifi point" && echo "" && nmcli d disconnect iface $WiFi)
	display_result "Dssabling WiFi"
	rm -f /tmp/WiFi.tmp.01
     ;;

     8)
	result=$(wifi-leif-logo-gui && ip route get 8.8.8.8 | awk '{print $NF; exit}')
	display_result "Your local IP is:"
     ;;

     9)
	result=$(wifi-leif-logo-gui && curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//')
	display_result "This is your IP address"
     ;;

     10)
	dialog --inputbox \
	"What IP-address / web-address do you want to ping?" 8 40 2> /tmp/IP.tmp.01
	IP=`cat /tmp/IP.tmp.01`

	dialog --inputbox \
	"How many time do you want to ping?" 8 40 2> /tmp/num.tmp.01
	num=`cat /tmp/num.tmp.01`
	
	result=$(wifi-leif-logo-gui && ping -c$num $IP)
	display_result "Pinging..."

	rm -f /tmp/num.tmp.01
	rm -f /tmp/IP.tmp.01
     ;;

     11)
	clear &&
	exit
     ;;
  esac
done
